{
  "name": "Redux Real-World Example Project Teardown",
  "tagline": "",
  "body": "## Project set up\r\n### Boilerplate\r\n\r\nAt the root of the project are the following \"boilerplate\" files that can be used in your own React-Redux projects in more-less the same form.\r\n\r\n#### ./package.json\r\n\r\n```json\r\n{\r\n  \"name\": \"redux-real-world-example\",\r\n  \"version\": \"0.0.0\",\r\n  \"description\": \"Redux real-world example\",\r\n  \"scripts\": {\r\n    \"start\": \"node server.js\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/reactjs/redux.git\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/reactjs/redux/issues\"\r\n  },\r\n  \"homepage\": \"http://redux.js.org\",\r\n  \"dependencies\": {\r\n    \"babel-polyfill\": \"^6.3.14\",\r\n    \"humps\": \"^0.6.0\",\r\n    \"isomorphic-fetch\": \"^2.1.1\",\r\n    \"lodash\": \"^4.0.0\",\r\n    \"normalizr\": \"^2.0.0\",\r\n    \"react\": \"^0.14.7\",\r\n    \"react-dom\": \"^0.14.7\",\r\n    \"react-redux\": \"^4.2.1\",\r\n    \"react-router\": \"2.0.0\",\r\n    \"react-router-redux\": \"^4.0.0-rc.1\",\r\n    \"redux\": \"^3.2.1\",\r\n    \"redux-logger\": \"^2.4.0\",\r\n    \"redux-thunk\": \"^1.0.3\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"babel-core\": \"^6.3.15\",\r\n    \"babel-loader\": \"^6.2.0\",\r\n    \"babel-preset-es2015\": \"^6.3.13\",\r\n    \"babel-preset-react\": \"^6.3.13\",\r\n    \"babel-preset-react-hmre\": \"^1.1.1\",\r\n    \"concurrently\": \"^0.1.1\",\r\n    \"express\": \"^4.13.3\",\r\n    \"redux-devtools\": \"^3.1.0\",\r\n    \"redux-devtools-dock-monitor\": \"^1.0.1\",\r\n    \"redux-devtools-log-monitor\": \"^1.0.3\",\r\n    \"webpack\": \"^1.9.11\",\r\n    \"webpack-dev-middleware\": \"^1.2.0\",\r\n    \"webpack-hot-middleware\": \"^2.9.1\"\r\n  }\r\n}\r\n```\r\n\r\n#### ./.babelrc\r\n\r\n```\r\n{\r\n  \"presets\": [\"es2015\", \"react\"],\r\n  \"env\": {\r\n    \"development\": {\r\n      \"presets\": [\"react-hmre\"]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### ./webpack.config.js\r\n\r\n```javascript\r\nvar path = require('path');\r\nvar webpack = require('webpack');\r\n\r\nmodule.exports = {\r\n  devtool: 'cheap-module-eval-source-map',\r\n  entry: [\r\n    'webpack-hot-middleware/client',\r\n    './index',\r\n  ],\r\n  output: {\r\n    path: path.join(__dirname, 'dist'),\r\n    filename: 'bundle.js',\r\n    publicPath: '/static/',\r\n  },\r\n  plugins: [\r\n    new webpack.optimize.OccurenceOrderPlugin(),\r\n    new webpack.HotModuleReplacementPlugin(),\r\n  ],\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /\\.js$/,\r\n        loaders: ['babel'],\r\n        exclude: /node_modules/,\r\n        include: __dirname,\r\n      },\r\n    ],\r\n  },\r\n};\r\n```\r\n\r\n#### ./index.html\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Redux real-world example</title>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\">\r\n    </div>\r\n    <script src=\"/static/bundle.js\"></script>\r\n  </body>\r\n</html>\r\n```\r\n\r\n#### ./index.js\r\n\r\n```javascript\r\nimport 'babel-polyfill';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { browserHistory } from 'react-router';\r\nimport { syncHistoryWithStore } from 'react-router-redux';\r\nimport Root from './containers/Root';\r\nimport configureStore from './store/configureStore';\r\n\r\nconst store = configureStore();\r\nconst history = syncHistoryWithStore(browserHistory, store);\r\n\r\nrender(\r\n  <Root store={store} history={history} />,\r\n  document.getElementById('root')\r\n);\r\n\r\n```\r\n\r\n#### server.js\r\n\r\n```javascript\r\nvar webpack = require('webpack');\r\nvar webpackDevMiddleware = require('webpack-dev-middleware');\r\nvar webpackHotMiddleware = require('webpack-hot-middleware');\r\nvar config = require('./webpack.config');\r\n\r\nvar app = new (require('express'))();\r\nvar port = 3000;\r\n\r\nvar compiler = webpack(config);\r\napp.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));\r\napp.use(webpackHotMiddleware(compiler));\r\n\r\napp.use(function (req, res) {\r\n  res.sendFile(__dirname + '/index.html');\r\n});\r\n\r\napp.listen(port, function (error) {\r\n  if (error) {\r\n    console.error(error);\r\n  } else {\r\n    console.info('==> ðŸŒŽ  Listening on port %s. Open up http://localhost:%s/ in your browser.',\r\n    port, port);\r\n  }\r\n});\r\n\r\n```\r\n\r\n#### routes.js\r\n\r\n```javascript\r\nimport React from 'react'\r\nimport { Route } from 'react-router'\r\nimport App from './containers/App'\r\nimport UserPage from './containers/UserPage'\r\nimport RepoPage from './containers/RepoPage'\r\n\r\nexport default (\r\n  <Route path=\"/\" component={App}>\r\n    <Route path=\"/:login/:name\"\r\n           component={RepoPage} />\r\n    <Route path=\"/:login\"\r\n           component={UserPage} />\r\n  </Route>\r\n)\r\n\r\n```\r\n\r\nYou'll see some project specific routes in routes.js.\r\n\r\n---\r\n\r\n### Directory Structure\r\n\r\n```\r\nreal-world/\r\n |---- actions/\r\n |---- components/\r\n |---- containers/\r\n |---- middleware/\r\n |---- reducers/\r\n |---- store/\r\n |---- .babelrc\r\n |---- index.html\r\n |---- index.js\r\n |---- package.json\r\n |---- routes.js\r\n |---- server.js\r\n |---- webpack.config.js\r\n\r\n```\r\n\r\n---\r\n\r\n### Configuring the store\r\n\r\nRedux uses a single \"Store\", heres how they set it up:\r\n\r\n```\r\nreal-world/\r\n...\r\n|---- reducers/\r\n|---- store/\r\n      |---- configureStore.js\r\n      |---- congifureStore.dev.js\r\n      |---- configureStore.prod.js\r\n...\r\n```\r\n\r\nThe configureStore.js file simply checks if the environment is labeled production, and if so requires the configureStore.prod.js configuration, otherwise it loads configureStore.dev.js. The primary difference between prod and dev is more logging and hot module replacement in dev.\r\n\r\n#### configureStore.js\r\n\r\n```javascript\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./configureStore.prod')\r\n} else {\r\n  module.exports = require('./configureStore.dev')\r\n}\r\n```\r\n\r\n#### configureStore.dev.js\r\n\r\n```javascript\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport createLogger from 'redux-logger'\r\nimport api from '../middleware/api'\r\nimport rootReducer from '../reducers'\r\nimport DevTools from '../containers/DevTools'\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(thunk, api, createLogger()),\r\n      DevTools.instrument()\r\n    )\r\n  )\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers', () => {\r\n      const nextRootReducer = require('../reducers').default\r\n      store.replaceReducer(nextRootReducer)\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n```\r\n\r\n#### configureStore.prod.js\r\n\r\n```javascript\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport api from '../middleware/api'\r\nimport rootReducer from '../reducers'\r\n\r\nexport default function configureStore(initialState) {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(thunk, api)\r\n  )\r\n}\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}